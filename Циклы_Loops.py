
    # While - цикл с предусловием
    # Пока пользователь не введет правильный пароль

    # пока условие выполняется код будет выполняться, если нет условия выхода
    # например ввод неправильного пароля - будет выполняться что-то пока не введен правильный пароль (блокировка спустя 5 попыток например)

import random

password_incorrect = True

while password_incorrect:
        print("Пытаемся войти в систему...")
        password_incorrect = random.randint(0, 1)



    # For. Итерируем списки и словари

users = [1, 2, 3, 4, 5]

    # Для одного пользователя в списке пользователи будем выполнять код (принт)
    # всего т.е. выполнится 5 раз (для каждого из пользователей в списке)
    # Способ сделать какое-то одно действие для всех значений в нашей стр-ре данных (списке)

for user in users:
    print(user)

    d = {
        "key": 123,
        "another": 456,
        "therd": 789
    }

    for key in d.keys():
        print(key)

    for value in d.values():
        print(value)

    for item in d.items():
        print(item) # tuples

    for key, value in d.items():
        print(key, value)

    # Break/Continue/Else - прерывание цикла

    # for i in range - цикл с итератором

    for i in range(10):
        if i % 2 == 0: # Позволяет завершить цикл досрочно, т.е. пропустить по сути что-то ненужное (в данном случае пропустим четные числа) т.е. для четных код (принт не выполнялся)
            continue

        print(i)
        if i == 7: #оператор прерывания например при переборе получили желаемые данные и нет смысла дальше продолжать цикл
            break

        else: #посмотреть самостоятельно else в циклах.
            print("Когда я выполняюсь")

    #enumerate - возвращает пары (индекс, значение)

    cities = ["Екатеринбург", "Moscow", "Sochi"]

    for i, city in enumerate(cities, start=1): # можно указать стартовое значение
        print(i, city)

